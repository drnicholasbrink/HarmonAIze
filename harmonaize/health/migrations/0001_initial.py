# Generated by Django 5.0.13 on 2025-08-08 11:11

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MappingSchema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Short name for this mapping configuration', max_length=200)),
                ('relation_type', models.CharField(choices=[('self', 'Self'), ('child', 'Child'), ('father', 'Father'), ('mother', 'Mother'), ('spouse', 'Spouse/Partner'), ('sibling', 'Sibling'), ('other', 'Other')], default='self', max_length=20)),
                ('create_related_patient', models.BooleanField(default=False, help_text='If enabled, create/link related patient based on the selected relation during harmonisation')),
                ('status', models.CharField(choices=[('provisional', 'Provisional'), ('approved', 'Approved')], default='provisional', max_length=20)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('comments', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_mappings', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_mappings', to=settings.AUTH_USER_MODEL)),
                ('datetime_attribute', models.ForeignKey(blank=True, help_text='Source attribute that represents the observation date/time', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='as_datetime_in_mappings', to='core.attribute')),
                ('patient_id_attribute', models.ForeignKey(help_text='Source attribute that uniquely identifies a patient', on_delete=django.db.models.deletion.PROTECT, related_name='as_patient_id_in_mappings', to='core.attribute')),
                ('source_study', models.ForeignKey(help_text='Study containing source attributes to harmonise', on_delete=django.db.models.deletion.CASCADE, related_name='source_mappings', to='core.study')),
                ('target_study', models.ForeignKey(help_text='Target database (study) defining harmonised attributes', on_delete=django.db.models.deletion.CASCADE, related_name='target_mappings', to='core.study')),
            ],
            options={
                'verbose_name': 'Mapping Schema',
                'verbose_name_plural': 'Mapping Schemas',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MappingRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transform_code', models.TextField(blank=True, help_text='Optional safe Python: lambda value: ... or def transform(value): return ...')),
                ('comments', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('source_attribute', models.ForeignKey(help_text='Attribute from the source study', on_delete=django.db.models.deletion.CASCADE, related_name='as_source_in_rules', to='core.attribute')),
                ('target_attribute', models.ForeignKey(help_text='Attribute from the target study', on_delete=django.db.models.deletion.CASCADE, related_name='as_target_in_rules', to='core.attribute')),
                ('schema', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rules', to='health.mappingschema')),
            ],
            options={
                'ordering': ['source_attribute__variable_name'],
                'unique_together': {('schema', 'source_attribute')},
            },
        ),
    ]

# Generated by Django 5.0.13 on 2025-08-18 10:02

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MappingSchema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('universal_relation_type', models.CharField(choices=[('self', 'Self'), ('child', 'Child'), ('father', 'Father'), ('mother', 'Mother'), ('spouse', 'Spouse/Partner'), ('sibling', 'Sibling'), ('other', 'Other')], default='self', help_text='Default relationship type for related patient mappings', max_length=20)),
                ('auto_populate_enabled', models.BooleanField(default=False, help_text='Whether to auto-populate mapping rules based on universal settings')),
                ('status', models.CharField(choices=[('provisional', 'Provisional'), ('approved', 'Approved')], default='provisional', max_length=20)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('comments', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_mappings', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_mappings', to=settings.AUTH_USER_MODEL)),
                ('source_study', models.ForeignKey(help_text='Study containing source attributes to harmonise', on_delete=django.db.models.deletion.CASCADE, related_name='source_mappings', to='core.study')),
                ('target_study', models.ForeignKey(help_text='Target database (study) defining harmonised attributes', on_delete=django.db.models.deletion.CASCADE, related_name='target_mappings', to='core.study')),
                ('universal_datetime', models.ForeignKey(blank=True, help_text='Default source attribute to use as datetime for all mappings', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='as_universal_datetime', to='core.attribute')),
                ('universal_patient_id', models.ForeignKey(blank=True, help_text='Default source attribute to use as patient ID for all mappings', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='as_universal_patient_id', to='core.attribute')),
            ],
            options={
                'verbose_name': 'Mapping Schema',
                'verbose_name_plural': 'Mapping Schemas',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RawDataFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(help_text='Raw data file (CSV, Excel, etc.)', upload_to='raw_data/%Y/%m/%d/')),
                ('original_filename', models.CharField(help_text='Original filename when uploaded', max_length=255)),
                ('file_format', models.CharField(choices=[('csv', 'CSV'), ('xlsx', 'Excel (XLSX)'), ('xls', 'Excel (XLS)'), ('json', 'JSON'), ('txt', 'Text')], help_text='Detected or specified file format', max_length=20)),
                ('file_size', models.PositiveIntegerField(help_text='File size in bytes')),
                ('rows_count', models.PositiveIntegerField(blank=True, help_text='Number of data rows in the file', null=True)),
                ('columns_count', models.PositiveIntegerField(blank=True, help_text='Number of columns in the file', null=True)),
                ('patient_id_column', models.CharField(blank=True, help_text='Column name containing patient identifiers', max_length=200)),
                ('date_column', models.CharField(blank=True, help_text='Column name containing dates/timestamps', max_length=200)),
                ('processing_status', models.CharField(choices=[('uploaded', 'Uploaded'), ('validated', 'Validated'), ('processed', 'Processed'), ('error', 'Processing Error')], default='uploaded', max_length=20)),
                ('processing_message', models.TextField(blank=True, help_text='Status messages or error details')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processed_at', models.DateTimeField(blank=True, help_text='When the file was last processed', null=True)),
                ('study', models.ForeignKey(help_text='Study this raw data belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='raw_data_files', to='core.study')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_raw_data', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Raw Data File',
                'verbose_name_plural': 'Raw Data Files',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='MappingRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('not_mappable', models.BooleanField(default=False, help_text='Mark this variable as not mappable to any target variable')),
                ('role', models.CharField(choices=[('value', 'Value'), ('patient_id', 'Patient ID'), ('datetime', 'Date/Time'), ('related_patient_id', 'Related Patient ID')], default='value', max_length=32)),
                ('related_relation_type', models.CharField(blank=True, choices=[('self', 'Self'), ('child', 'Child'), ('father', 'Father'), ('mother', 'Mother'), ('spouse', 'Spouse/Partner'), ('sibling', 'Sibling'), ('other', 'Other')], help_text='Relation type (only for related patient id role)', max_length=20)),
                ('transform_code', models.TextField(blank=True, help_text='Optional safe Python: lambda value: ... or def transform(value): return ...')),
                ('comments', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('datetime_attribute', models.ForeignKey(blank=True, help_text='DateTime attribute to use for this mapping', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='as_datetime_for_rules', to='core.attribute')),
                ('patient_id_attribute', models.ForeignKey(blank=True, help_text='Patient ID attribute to use for this mapping', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='as_patient_id_for_rules', to='core.attribute')),
                ('source_attribute', models.ForeignKey(help_text='Attribute from the source study', on_delete=django.db.models.deletion.CASCADE, related_name='as_source_in_rules', to='core.attribute')),
                ('target_attribute', models.ForeignKey(blank=True, help_text='Attribute from the target study', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='as_target_in_rules', to='core.attribute')),
                ('schema', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rules', to='health.mappingschema')),
            ],
            options={
                'ordering': ['source_attribute__variable_name'],
                'unique_together': {('schema', 'source_attribute')},
            },
        ),
        migrations.CreateModel(
            name='RawDataColumn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('column_name', models.CharField(help_text='Original column name from the file', max_length=200)),
                ('column_index', models.PositiveIntegerField(help_text='0-based column index in the file')),
                ('sample_values', models.JSONField(blank=True, default=list, help_text='Sample values from this column for preview')),
                ('inferred_type', models.CharField(choices=[('text', 'Text'), ('integer', 'Integer'), ('float', 'Float'), ('date', 'Date'), ('datetime', 'Date/Time'), ('boolean', 'Boolean'), ('categorical', 'Categorical')], default='text', max_length=50)),
                ('non_null_count', models.PositiveIntegerField(default=0, help_text='Number of non-null values in this column')),
                ('unique_count', models.PositiveIntegerField(default=0, help_text='Number of unique values in this column')),
                ('is_potential_patient_id', models.BooleanField(default=False, help_text='Could this be a patient ID column?')),
                ('is_potential_date', models.BooleanField(default=False, help_text='Could this be a date/time column?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('raw_data_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='columns', to='health.rawdatafile')),
            ],
            options={
                'verbose_name': 'Raw Data Column',
                'verbose_name_plural': 'Raw Data Columns',
                'ordering': ['column_index'],
                'unique_together': {('raw_data_file', 'column_name')},
            },
        ),
    ]
